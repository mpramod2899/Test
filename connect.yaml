---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  replicas: 2
  image:
    #application: confluentinc/cp-server-connect:6.2.1
    application: 097777094708.dkr.ecr.us-east-1.amazonaws.com/kafka-connect-s3:10.0.1 
    init: confluentinc/confluent-init-container:2.0.1
  podTemplate:
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  authorization:
    type: rbac
  tls:
    autoGeneratedCerts: true
  license:
    globalLicense: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      authentication:
        type: plain
        jaasConfig:
          secretRef: credential
      tls:
        enabled: true
    mds:
      endpoint: https://kafka.confluent.svc.cluster.local:8090
      tokenKeyPair:
        secretRef: mds-token
      authentication:
        type: bearer
        bearer:
          secretRef: connect-mds-client
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: rtpbi.com
      annotations:
        service.beta.kubernetes.io/aws-load-balancer-type: nlb
        service.beta.kubernetes.io/aws-load-balancer-scheme: internal
        service.beta.kubernetes.io/aws-load-balancer-internal: 'true'
        service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
        service.beta.kubernetes.io/aws-load-balancer-subnets: subnet-0514469c690d0e940, subnet-0f5244693c2c67800, subnet-0988c24e5602ee83f
        service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true
        service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
        service.beta.kubernetes.io/aws-load-balancer-backend-protocol: ssl
        service.beta.kubernetes.io/aws-load-balancer-ssl-ports: '443'
        service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:097777094708:certificate/3c55d248-55b4-4f81-8e90-90bc1ae63357
        service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: ELBSecurityPolicy-2016-08
        service.beta.kubernetes.io/aws-load-balancer-alpn-policy: HTTP2Preferred
---
apiVersion: platform.confluent.io/v1beta1
kind: Connector
metadata:
  name: S3SinkConnectorConnector_0
  namespace: confluent
spec:
  name: S3SinkConnectorConnector_0
  class: io.confluent.connect.s3.S3SinkConnector
  configs:
    errors.retry.delay.max.ms: 5
    topics: test-end-to-end
    format.class: io.confluent.connect.s3.format.json.JsonFormat
    flush.size: 1
    s3.bucket.name: kafka-sink-connector-test
    s3.region: us-east-1
    storage.class: io.confluent.connect.s3.storage.S3Storage
    principal.service.name: c3
    principal.service.password: 7bFzKvpl2MGwAXZU9vPX#
    errors.tolerance: all
    errors.deadletterqueue.topic.name: dlq-test-end-to-end
    errors.deadletterqueue.context.headers.enable: true
  errors.deadletterqueue.topic.replication.factor: 3
  restartPolicy:
    type: OnFailure
    maxRetry: 3
